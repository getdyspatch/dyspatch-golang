/*
 * Dyspatch API
 *
 * # Introduction  The Dyspatch API is based on the REST paradigm, and features resource based URLs with standard HTTP response codes to indicate errors. We use standard HTTP authentication and request verbs, and all responses are JSON formatted. See our [Implementation Guide](https://docs.dyspatch.io/development/implementing_dyspatch/) for more details on how to implement Dyspatch.  ## API Client Libraries  Dyspatch provides API Clients for popular languages and web frameworks.  - [Java](https://github.com/getdyspatch/dyspatch-java) - [Javascript](https://github.com/getdyspatch/dyspatch-javascript) - [Python](https://github.com/getdyspatch/dyspatch-python) - [C#](https://github.com/getdyspatch/dyspatch-dotnet) - [Go](https://github.com/getdyspatch/dyspatch-golang) - [Ruby](https://github.com/getdyspatch/dyspatch-ruby) 
 *
 * API version: 2019.10
 * Contact: support@dyspatch.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dyspatch
// CompiledRead struct for CompiledRead
type CompiledRead struct {
	// Sender address
	Sender string `json:"sender,omitempty"`
	// Reply-To address
	ReplyTo string `json:"replyTo,omitempty"`
	// Base64 encoded template subject line
	Subject string `json:"subject,omitempty"`
	// Base64 encoded template HTML body
	Html string `json:"html,omitempty"`
	// Base64 encoded template text body
	Text string `json:"text,omitempty"`
}
